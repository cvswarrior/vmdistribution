package hu.bme.mit.vmdistribution.model.queries

import epackage "hu.bme.mit.vmdistribution"
import "http://www.eclipse.org/emf/2002/Ecore"

pattern computers(c : Computer) {
	Computer(c);
}

pattern get_incompatible (pc : Computer, vm_toinstall : VirtualMachine){
	neg find check_archi(vm_toinstall, pc);
} or {
	neg find check_ram(vm_toinstall, pc);
}

@QueryExplorer(checked = false)
pattern check_archi(vm_toinstall : VirtualMachine, pc : Computer){
	VirtualMachine.requirements.reqArchi(vm_toinstall, vmarch);
	Computer.architecture(pc, pcarch);
	check(pcarch == 'x64' || vmarch == pcarch);
}

@QueryExplorer(checked = false)
pattern check_archi2(vm_toinstall : VirtualMachine, pc : Computer){
 VirtualMachine.requirements.reqArchi(vm_toinstall, vmarch);
 Computer.architecture(pc, vmarch);
} or {
 VirtualMachine.requirements.reqArchi(vm_toinstall, vmarch);
 Computer.architecture(pc, 'x64');
}

@QueryExplorer(checked = false)
pattern check_ram(vm_toinstall : VirtualMachine, pc : Computer){
	Computer.installedRAM(pc, pcram);
	VirtualMachine.requirements.reqRAM(vm_toinstall, vmram);
	check(pcram >= vmram);
}
@QueryExplorer(checked = false)
pattern check_diskspace(pc : Computer, newvmsize : EDouble, currentvmsize : EDouble){
	Computer.maxSpaceForVMs(pc, maxsize);
	check(maxsize - currentvmsize >= newvmsize);
}


